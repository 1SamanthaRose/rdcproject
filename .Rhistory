transition_time(Year) +
ease_aes('linear')
g
g <- ggplot(DRC, mapping = aes(DRC$agkm, DRC$forestkm, frame = Year)) +
geom_point() +
geom_smooth(aes(DRC$Year, DRC$agkm),
method = "lm",
show.legend = FALSE) +
facet_wrap(~Year, scales = "free") +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
g
g <- ggplot(DRC, mapping = aes(DRC$agkm, DRC$forestkm, frame = Year)) +
geom_point() +
facet_wrap(~Year, scales = "free") +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
g
geom_point( mapping = aes(DRC$agkm, DRC$forestkm, frame = Year) +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
ease_aes('linear')
g
ease_aes('linear')
g
geom_point(mapping = aes(agkm, forestkm, frame = Year) +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
ease_aes('linear')
g
g <- ggplot(DRC) +
geom_point(mapping = aes(agkm, forestkm, frame = Year)) +
facet_wrap(~Year, scales = "free") +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear'),
g
g <- ggplot(DRC) +
geom_point(mapping = aes(agkm, forestkm, frame = Year)) +
facet_wrap(~Year, scales = "free") +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
g
g <- ggplot() +
geom_point(data = DRC, mapping = aes(agkm, forestkm, frame = Year)) +
facet_wrap(~Year, scales = "free") +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
g
g <- ggplot() +
geom_point(data = DRC, mapping = aes(DRC$agkm, DRC$forestkm, frame = Year)) +
facet_wrap(~Year, scales = "free") +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
g
DRC$forestkm <- as.numeric(as.character(DRC$forestkm))
DRC$agkm <- as.numeric(as.character(DRC$agkm))
DRC$forestkm <- as.numeric(as.character(DRC$forestkm))
g <- ggplot() +
geom_point(data = DRC, mapping = aes(DRC$agkm, DRC$forestkm, frame = Year)) +
facet_wrap(~Year, scales = "free") +
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
g
library(dplyr)
library(base)
library(tidyverse)
library(gt)
library(scales)
library(gganimate)
cod_dataset <- read.csv("climate-change_cod.csv")
##DO NOT RUN THIS CODE###
##THIS WAS INITIAL CODE TO SET UP THE DATASET##
#cod_dataset <- rename(cod_dataset, code = "Indicator Code", country_name = "Country Name", country_iso3 = "Country ISO3", i_name = "Indicator")
cod_dataset <- select(cod_dataset, Year, Value, Indicator.Code)
agkm  <- slice(cod_dataset, 2:59)
agkm <- rename(agkm, ag.lnd.sq.km = "Value")
agp  <- slice(cod_dataset, 60:175)
agp <- rename(agp, ag.lnd.per = "Value")
DRC <- merge(agkm, agp, by = "Year", all = TRUE)
forestkm <-slice(cod_dataset, 191:219)
forestkm <- rename(forestkm, fkm = "Value")
DRC <- merge(DRC, forestkm, by= "Year", all = TRUE)
ate <- slice(cod_dataset, 369:388)
ate <- rename(ate, ate = "Value")
DRC <- merge(DRC, ate, by = "Year", all = "TRUE")
rec <-slice(cod_dataset, 389:414)
rec <-rename(rec, rec = "Value")
DRC <- merge(DRC, rec, by = "Year", all = TRUE)
upa <- slice(cod_dataset, 1344:1404)
upa <- rename(upa, upa = "Value")
DRC<- merge(DRC, upa, by = "Year", all = TRUE)
tpop <- slice(cod_dataset, 1642:1702)
tpop <- rename(tpop, tpop = "Value")
DRC <- merge(DRC, tpop, by = "Year", all = TRUE)
popg <- slice(cod_dataset, 1582:1641)
popg <- rename(popg, popg = "Value")
DRC <- merge(DRC, popg, by = "Year", all = TRUE)
#remove unnecessary dataframes
remove(popg, upa, tpop, rec, ate, forestkm, agkm, agp)
popg<- lapply(DRC$popg, as.numeric)
DRC <- as.data.frame(DRC)
DRC$Year <- as.numeric(as.character(DRC$Year))
DRC$popg <- as.numeric(as.character(DRC$popg))
plot(DRC$Year, DRC$popg, pch = 0.5, na.rm = TRUE, main = "Population Growth 1960 to 2020")
colnames(DRC) <- make.unique(names(DRC)) #if getting duplicate 'data' error
DRC <- as.data.frame(lapply(DRC, na.omit)) #trying to remove NA values
DRC$upa <- as.numeric(as.character(DRC$upa))
DRC$ate <- as.numeric(as.character(DRC$ate))
DRC$rec <- as.numeric(as.character(DRC$rec))
DRC$ag.lnd.per <- as.numeric(as.character(DRC$ag.lnd.per))
g <- ggplot(data = DRC)+
geom_area(mapping = aes(Year, ate, fill = "Access to Electricity"), alpha = 0, na.rm = TRUE,) +
geom_area(mapping = aes(Year, popg, fill = "Population Growth"), alpha = 0, na.rm = TRUE) +
geom_area(mapping = aes(Year, upa, fill = "Urban Agglomeration Populations"), alpha = 0, na.rm = TRUE) +
geom_area(mapping = aes(Year, ag.lnd.per, fill = "Agricultural Land"), alpha = 0, na.rm = TRUE)+
scale_color_discrete(name = "Statistic by Percentage") +
stat_smooth( mapping = aes(Year, ate),
geom = 'area', method = 'loess', span = 1/3,
alpha = 1/2, fill = "red") +
stat_smooth( mapping = aes(Year, popg),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "blue") +
stat_smooth( mapping = aes(Year, ag.lnd.per),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "green") +
stat_smooth( mapping = aes(Year, upa),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "purple")
g
library(corrgram)
corrgram(DRC, order=NULL, panel=panel.shade, text.panel=panel.txt,
main="Correlogram")
# Source: https://github.com/dgrtwo/gganimate
# install.packages("cowplot")  # a gganimate dependency
# devtools::install_github("dgrtwo/gganimate")
library(ggplot2)
library(gganimate)
library(gapminder)
theme_set(theme_bw())  # pre-set the bw theme.
DRC$agkm <- as.numeric(as.character(DRC$agkm))
DRC$forestkm <- as.numeric(as.character(DRC$forestkm))
install.packages("animation")
library(animation)
g <- ggplot(data = DRC)+
geom_density(mapping = aes(Year, ate, color = "Access to Electricity"), na.rm = TRUE,) +
geom_point(mapping = aes(Year, popg, color = "Population Growth"), na.rm = TRUE) +
geom_point(mapping = aes(Year, upa, color = "Urban Agglomeration Populations"), na.rm = TRUE) +
scale_color_discrete(name = "Statistic by Percentage") +
theme_minimal() +
xlab("Year") +
ylab("Percent") +
title(main = "Electricity, Pop. and Urban Pop.")
g
lbls <- paste0(month.abb[Year(economics_m$Year)], " ", lubridate::year(DRC$Year))
lbls <- paste0(month.abb[year(economics_m$Year)], " ", lubridate::year(DRC$Year))
brks <- DRC$Year
library(corrgram)
g <- ggplot(data = DRC)+
geom_area(mapping = aes(Year, ate, fill = "Access to Electricity"), alpha = 0, na.rm = TRUE,) +
geom_area(mapping = aes(Year, popg, fill = "Population Growth"), alpha = 0, na.rm = TRUE) +
geom_area(mapping = aes(Year, upa, fill = "Urban Agglomeration Populations"), alpha = 0, na.rm = TRUE) +
geom_area(mapping = aes(Year, ag.lnd.per, fill = "Agricultural Land"), alpha = 0, na.rm = TRUE)+
scale_color_discrete(name = "Statistic by Percentage") +
stat_smooth( mapping = aes(Year, ate),
geom = 'area', method = 'loess', span = 1/3,
alpha = 1/2, fill = "red") +
stat_smooth( mapping = aes(Year, popg),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "blue") +
stat_smooth( mapping = aes(Year, ag.lnd.per),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "green") +
stat_smooth( mapping = aes(Year, upa),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "purple")
g
library(dplyr)
library(base)
library(tidyverse)
library(gt)
library(scales)
library(gganimate)
library(corrgram)
cod_dataset <- read.csv("climate-change_cod.csv")
##DO NOT RUN THIS CODE###
##THIS WAS INITIAL CODE TO SET UP THE DATASET##
#cod_dataset <- rename(cod_dataset, code = "Indicator Code", country_name = "Country Name", country_iso3 = "Country ISO3", i_name = "Indicator")
cod_dataset <- select(cod_dataset, Year, Value, Indicator.Code)
agkm  <- slice(cod_dataset, 2:59)
agkm <- rename(agkm, ag.lnd.sq.km = "Value")
agp  <- slice(cod_dataset, 60:175)
agp <- rename(agp, ag.lnd.per = "Value")
DRC <- merge(agkm, agp, by = "Year", all = TRUE)
forestkm <-slice(cod_dataset, 191:219)
forestkm <- rename(forestkm, fkm = "Value")
DRC <- merge(DRC, forestkm, by= "Year", all = TRUE)
ate <- slice(cod_dataset, 369:388)
ate <- rename(ate, ate = "Value")
DRC <- merge(DRC, ate, by = "Year", all = "TRUE")
rec <-slice(cod_dataset, 389:414)
rec <-rename(rec, rec = "Value")
DRC <- merge(DRC, rec, by = "Year", all = TRUE)
upa <- slice(cod_dataset, 1344:1404)
upa <- rename(upa, upa = "Value")
DRC<- merge(DRC, upa, by = "Year", all = TRUE)
tpop <- slice(cod_dataset, 1642:1702)
tpop <- rename(tpop, tpop = "Value")
DRC <- merge(DRC, tpop, by = "Year", all = TRUE)
popg <- slice(cod_dataset, 1582:1641)
popg <- rename(popg, popg = "Value")
DRC <- merge(DRC, popg, by = "Year", all = TRUE)
#remove unnecessary dataframes
remove(popg, upa, tpop, rec, ate, forestkm, agkm, agp)
popg<- lapply(DRC$popg, as.numeric)
DRC <- as.data.frame(DRC)
DRC$Year <- as.numeric(as.character(DRC$Year))
DRC$popg <- as.numeric(as.character(DRC$popg))
plot(DRC$Year, DRC$popg, pch = 0.5, na.rm = TRUE, main = "Population Growth 1960 to 2020")
g <- ggplot(data = DRC)+
geom_area(mapping = aes(Year, ate, fill = "Access to Electricity"), alpha = 0, na.rm = TRUE,) +
geom_area(mapping = aes(Year, popg, fill = "Population Growth"), alpha = 0, na.rm = TRUE) +
geom_area(mapping = aes(Year, upa, fill = "Urban Agglomeration Populations"), alpha = 0, na.rm = TRUE) +
geom_area(mapping = aes(Year, ag.lnd.per, fill = "Agricultural Land"), alpha = 0, na.rm = TRUE)+
scale_color_discrete(name = "Statistic by Percentage") +
stat_smooth( mapping = aes(Year, ate),
geom = 'area', method = 'loess', span = 1/3,
alpha = 1/2, fill = "red") +
stat_smooth( mapping = aes(Year, popg),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "blue") +
stat_smooth( mapping = aes(Year, ag.lnd.per),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "green") +
stat_smooth( mapping = aes(Year, upa),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "purple")
g
colnames(DRC) <- make.unique(names(DRC)) #if getting duplicate 'data' error
DRC <- as.data.frame(lapply(DRC, na.omit)) #trying to remove NA values
DRC$upa <- as.numeric(as.character(DRC$upa))
DRC$ate <- as.numeric(as.character(DRC$ate))
DRC$rec <- as.numeric(as.character(DRC$rec))
DRC$ag.lnd.per <- as.numeric(as.character(DRC$ag.lnd.per))
g <- ggplot(data = DRC)+
geom_area(mapping = aes(Year, ate, fill = "Access to Electricity"), alpha = 0, na.rm = TRUE,) +
geom_area(mapping = aes(Year, popg, fill = "Population Growth"), alpha = 0, na.rm = TRUE) +
geom_area(mapping = aes(Year, upa, fill = "Urban Agglomeration Populations"), alpha = 0, na.rm = TRUE) +
geom_area(mapping = aes(Year, ag.lnd.per, fill = "Agricultural Land"), alpha = 0, na.rm = TRUE)+
scale_color_discrete(name = "Statistic by Percentage") +
stat_smooth( mapping = aes(Year, ate),
geom = 'area', method = 'loess', span = 1/3,
alpha = 1/2, fill = "red") +
stat_smooth( mapping = aes(Year, popg),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "blue") +
stat_smooth( mapping = aes(Year, ag.lnd.per),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "green") +
stat_smooth( mapping = aes(Year, upa),
geom = 'area', method = 'loess', span = 1,
alpha = 1/2, fill = "purple")
g
library(corrgram)
corrgram(DRC, order=NULL, panel=panel.shade, text.panel=panel.txt,
main="Correlogram")
colnames(DRC) <- make.unique(names(DRC)) #if getting duplicate 'data' error
DRC <- as.data.frame(lapply(DRC, na.omit)) #trying to remove NA values
DRC$upa <- as.numeric(as.character(DRC$upa))
DRC$ate <- as.numeric(as.character(DRC$ate))
DRC$rec <- as.numeric(as.character(DRC$rec))
DRC$ag.lnd.per <- as.numeric(as.character(DRC$ag.lnd.per))
g <- ggplot(data = DRC)+
geom_density(mapping = aes(Year, ate, color = "Access to Electricity"), na.rm = TRUE,) +
geom_point(mapping = aes(Year, popg, color = "Population Growth"), na.rm = TRUE) +
geom_point(mapping = aes(Year, upa, color = "Urban Agglomeration Populations"), na.rm = TRUE) +
scale_color_discrete(name = "Statistic by Percentage") +
theme_minimal() +
xlab("Year") +
ylab("Percent") +
title(main = "Electricity, Pop. and Urban Pop.")
g
g <- ggplot(data = DRC)+
geom_point(mapping = aes(Year, ate, color = "Access to Electricity"), na.rm = TRUE,) +
geom_point(mapping = aes(Year, popg, color = "Population Growth"), na.rm = TRUE) +
geom_point(mapping = aes(Year, upa, color = "Urban Agglomeration Populations"), na.rm = TRUE) +
scale_color_discrete(name = "Statistic by Percentage") +
theme_minimal() +
xlab("Year") +
ylab("Percent") +
title(main = "Electricity, Pop. and Urban Pop.")
g
View(climate_change_cod)
corrgram(DRC, order=NULL, panel=panel.shade, text.panel=panel.txt,
main="Correlogram")
ccc <- read.csv("climate-change_cod.csv")
ccc <- read.csv("climate-change_cod.csv")
cod_dataset <- ccc
##DO NOT RUN THIS CODE###
##THIS WAS INITIAL CODE TO SET UP THE DATASET##
#cod_dataset <- rename(cod_dataset, code = "Indicator Code", country_name = "Country Name", country_iso3 = "Country ISO3", i_name = "Indicator")
cod_dataset <- select(cod_dataset, Year, Value, Indicator.Code)
agkm  <- slice(cod_dataset, 2:59)
agkm <- rename(agkm, ag.lnd.sq.km = "Value")
agp  <- slice(cod_dataset, 60:175)
agp <- rename(agp, ag.lnd.per = "Value")
DRC <- merge(agkm, agp, by = "Year", all = TRUE)
forestkm <-slice(cod_dataset, 191:219)
forestkm <- rename(forestkm, fkm = "Value")
DRC <- merge(DRC, forestkm, by= "Year", all = TRUE)
ate <- slice(cod_dataset, 369:388)
ate <- rename(ate, ate = "Value")
DRC <- merge(DRC, ate, by = "Year", all = "TRUE")
rec <-slice(cod_dataset, 389:414)
rec <-rename(rec, rec = "Value")
DRC <- merge(DRC, rec, by = "Year", all = TRUE)
upa <- slice(cod_dataset, 1344:1404)
upa <- rename(upa, upa = "Value")
DRC<- merge(DRC, upa, by = "Year", all = TRUE)
tpop <- slice(cod_dataset, 1642:1702)
tpop <- rename(tpop, tpop = "Value")
DRC <- merge(DRC, tpop, by = "Year", all = TRUE)
popg <- slice(cod_dataset, 1582:1641)
popg <- rename(popg, popg = "Value")
DRC <- merge(DRC, popg, by = "Year", all = TRUE)
#remove unnecessary dataframes
remove(popg, upa, tpop, rec, ate, forestkm, agkm, agp)
DRC <- as.data.frame(DRC)
popg<- lapply(DRC$popg, as.numeric)
#Plotting total pop. growth
DRC$Year <- as.numeric(as.character(DRC$Year))
DRC$popg <- as.numeric(as.character(DRC$popg))
plot(DRC$Year, DRC$popg, pch = 0.5, na.rm = FALSE, main = "Population Growth 1960 to 2020")
DRC <- as.data.frame(DRC)
plot(DRC$Year, DRC$tpop, pch = 5, na.rm = TRUE, main = "Total Population 1960 to 2020")
colnames(DRC) <- make.unique(names(DRC)) #if getting duplicate 'data' error
DRC <- as.data.frame(lapply(DRC, na.omit)) #trying to remove NA values
DRC$upa <- as.numeric(as.character(DRC$upa))
DRC$ate <- as.numeric(as.character(DRC$ate))
DRC$rec <- as.numeric(as.character(DRC$rec))
DRC$ag.lnd.per <- as.numeric(as.character(DRC$ag.lnd.per))
g <- ggplot(data = DRC)+
geom_point(mapping = aes(Year, ate, color = "Access to Electricity"), na.rm = TRUE,) +
geom_point(mapping = aes(Year, popg, color = "Population Growth"), na.rm = TRUE) +
geom_point(mapping = aes(Year, upa, color = "Urban Agglomeration Populations"), na.rm = TRUE) +
scale_color_discrete(name = "Statistic by Percentage") +
theme_minimal() +
xlab("Year") +
ylab("Percent") +
title(main = "Electricity, Pop. and Urban Pop.")
g
############
#Correlogram between Year, Ag. Arable, precipitation,
library(corrgram)
corrgram(DRC, order=NULL, panel=panel.shade, text.panel=panel.txt,
main="Correlogram")
CO2emissionsgaseouskt <- slice(cod_dataset, 459:515)
CO2emissionsgaseouskt <- rename(CO2emissionsgaseouskt, CO2emissionsgaseouskt = "Value")
populationgrowth <- slice(cod_dataset, 1582:1641)
populationgrowth <- rename(populationgrowth, populationgrowth = "Value")
DRC<-merge(CO2emissionsgaseouskt, populationgrowth, by = "Year", all = TRUE)
avgprec <- slice(cod_dataset, 249:260)
avgprec <- rename(avgprec, avgprec= "Value")
DRC <- merge(DRC, avgprec, by = "Year", all = TRUE)
totalgreenhousekt <- slice(cod_dataset, 1105:1153)
totalgreenhousekt <- rename(totalgreenhousekt, totalgreenhousekt = "Value")
DRC <- merge(DRC, totalgreenhousekt, by = "Year", all = TRUE)
agrland <- slice(cod_dataset, 2:59)
agrland <- rename(agrland, agrland = "Value")
DRC <- merge(DRC, agrland, by = "Year", all = TRUE)
urbpop <- slice(cod_dataset, 1763:1823)
urbpop <- rename(urbpop, urbpop = "Value")
DRC <- merge(DRC, urbpop, by = "Year", all = TRUE)
DRC <- as.data.frame(DRC)
agrland<- lapply(DRC$agrland, as.numeric)
DRC$Year <- as.numeric(as.character(DRC$Year))
DRC$urbpop <- as.numeric(as.character(DRC$urbpop))
plot(DRC$Year, DRC$urbpop, pch=0.75, col = "Red", na.rm = FALSE, main= "Urban Population from 1960 to 2020")
## Remove Duplicate Values
colnames(DRC) <- make.unique(names(DRC))
## 2D Histogram Showing Relationship between Year and Urban Population
ggplot(DRC, aes(x=Year, y=urbpop)) +
geom_bin2d() +
theme_bw() +
labs(title="Urban Population Growth between Years of 1960 and 2020")
ggplot(DRC, aes(x=Year, y=urbpop) ) +
geom_bin2d(bins = 70) +
scale_fill_continuous(type = "viridis") +
theme_bw() +
labs(title="Urban Population Growth between Years of 1960 and 2020")
#Samantha Roses
View(ccc)
View(ccc)
arbland <- slice(cod_dataset, 118:175)   #total population
arbland <- rename(arbland, arbland = "Value")
arbland <- merge(DRC, arbland, by = "Year", all = TRUE)
View(arbland)
#removing all the dataframes created from this method of slicing
remove(C02emissionsgaseouskt, populationgrowth, avgprec, totalgreenhousekt, agrland, urbpop,
popg, upa, tpop, rec, ate, forestkm, agkm, agp, arbland)
#Plotting total pop. growth
DRC$Year <- as.numeric(as.character(DRC))
#Plotting total pop. growth
DRC$Year <- as.numeric(as.character(DRC), na.rm = TRUE)
DRC$Year
DRC$popg <- as.numeric(as.character(DRC$popg))
plot(DRC$Year, DRC$popg, pch = 0.5, na.rm = FALSE, main = "Population Growth 1960 to 2020")
plot(DRC$Year, DRC$populationgrowth, pch = 0.5, na.rm = FALSE, main = "Population Growth 1960 to 2020")
DRC <- as.data.frame(DRC)
plot(DRC$Year, DRC$tpop, pch = 5, na.rm = TRUE, main = "Total Population 1960 to 2020")
#######
#Data Visualisation first
#######
library(dplyr)
library(base)
library(ggplot2)
library(corrgram)
library(scales)
library(tidyverse)
ccc <- read.csv("climate-change_cod.csv")
cod_dataset <- ccc
cod_dataset <- select(cod_dataset, Year, Value)
#Slicing and dicing our chosen variables into a df called 'DRC'
## Slicing Variables ##
#Malika
CO2emissionsgaseouskt <- slice(cod_dataset, 459:515)
CO2emissionsgaseouskt <- rename(CO2emissionsgaseouskt, CO2emissionsgaseouskt = "Value")
populationgrowth <- slice(cod_dataset, 1582:1641)
populationgrowth <- rename(populationgrowth, populationgrowth = "Value")
DRC<-merge(CO2emissionsgaseouskt, populationgrowth, by = "Year", all = TRUE)
avgprec <- slice(cod_dataset, 249:260)
avgprec <- rename(avgprec, avgprec= "Value")
DRC <- merge(DRC, avgprec, by = "Year", all = TRUE)
totalgreenhousekt <- slice(cod_dataset, 1105:1153)
totalgreenhousekt <- rename(totalgreenhousekt, totalgreenhousekt = "Value")
DRC <- merge(DRC, totalgreenhousekt, by = "Year", all = TRUE)
agrland <- slice(cod_dataset, 2:59)
agrland <- rename(agrland, agrland = "Value")
DRC <- merge(DRC, agrland, by = "Year", all = TRUE)
urbpop <- slice(cod_dataset, 1763:1823)
urbpop <- rename(urbpop, urbpop = "Value")
DRC <- merge(DRC, urbpop, by = "Year", all = TRUE)
#Samantha Roses
agp  <- slice(cod_dataset, 60:175)       #agriculture groth %
agp <- rename(agp, ag.lnd.per = "Value")
DRC <- merge(DRC, agp, by = "Year", all = TRUE)
forestkm <-slice(cod_dataset, 191:219)  #forest land per km^2
forestkm <- rename(forestkm, fkm = "Value")
DRC <- merge(DRC, forestkm, by= "Year", all = TRUE)
ate <- slice(cod_dataset, 369:388)     #access to electricity by pop. %
ate <- rename(ate, ate = "Value")
DRC <- merge(DRC, ate, by = "Year", all = "TRUE")
rec <-slice(cod_dataset, 389:414)      #renewable energy consumption by %
rec <-rename(rec, rec = "Value")
DRC <- merge(DRC, rec, by = "Year", all = TRUE)
upa <- slice(cod_dataset, 1344:1404)   #urban pop. agglomeration
upa <- rename(upa, upa = "Value")
DRC<- merge(DRC, upa, by = "Year", all = TRUE)
tpop <- slice(cod_dataset, 1642:1702)   #total population
tpop <- rename(tpop, tpop = "Value")
DRC <- merge(DRC, tpop, by = "Year", all = TRUE)
arbland <- slice(cod_dataset, 118:175)   #arable land %
arbland <- rename(arbland, arbland = "Value")
arbland <- merge(DRC, arbland, by = "Year", all = TRUE)
#removing all the dataframes created from this method of slicing
remove(C02emissionsgaseouskt, populationgrowth, avgprec, totalgreenhousekt, agrland, urbpop,
popg, upa, tpop, rec, ate, forestkm, agkm, agp, arbland)
#making DRC dataframe
DRC <- as.data.frame(DRC)
#removing all the dataframes created from this method of slicing
remove(CO2emissionsgaseouskt, populationgrowth, avgprec, totalgreenhousekt, agrland, urbpop,
popg, upa, tpop, rec, ate, forestkm, agkm, agp, arbland)
#Plotting total pop. growth
DRC$Year <- as.numeric(as.character(DRC$Year))
DRC$popg <- as.numeric(as.character(DRC$popg))
plot(DRC$Year, DRC$populationgrowth, pch = 0.5, na.rm = FALSE, main = "Population Growth 1960 to 2020")
DRC <- as.data.frame(DRC)
plot(DRC$Year, DRC$tpop, pch = 5, na.rm = TRUE, main = "Total Population 1960 to 2020")
colnames(DRC) <- make.unique(names(DRC)) #if getting duplicate 'data' error
DRC <- as.data.frame(lapply(DRC, na.omit)) #trying to remove NA values
DRC$upa <- as.numeric(as.character(DRC$upa))
DRC$ate <- as.numeric(as.character(DRC$ate))
DRC$rec <- as.numeric(as.character(DRC$rec))
DRC$ag.lnd.per <- as.numeric(as.character(DRC$ag.lnd.per))
g <- ggplot(data = DRC)+
geom_point(mapping = aes(Year, ate, color = "Access to Electricity"), na.rm = TRUE,) +
geom_point(mapping = aes(Year, popg, color = "Population Growth"), na.rm = TRUE) +
geom_point(mapping = aes(Year, upa, color = "Urban Agglomeration Populations"), na.rm = TRUE) +
scale_color_discrete(name = "Statistic by Percentage") +
theme_minimal() +
xlab("Year") +
ylab("Percent") +
title(main = "Electricity, Pop. and Urban Pop.")
g
correl.df <- c(DRC$arbland, DRC$forestkm, DRC$agrland, DRC$avgprec, DRC$Year )
library(corrgram)
corrgram(DRC, order=NULL, panel=panel.shade, text.panel=panel.txt,
main="Correlogram")
corrgram(correl.df, order=NULL, panel=panel.shade, text.panel=panel.txt,
main="Correlogram")
correl.df <- c(DRC$arbland, DRC$forestkm, DRC$agrland, DRC$avgprec, DRC$Year )
library(corrgram)
corrgram(correl.df, order=NULL, panel=panel.shade, text.panel=panel.txt,
main="Correlogram")
DRC$arbland <- as.numeric(as.character(DRC$arbland))
DRC$agrland <- as.numeric(as.character(DRC$agrland))
DRC$avgprec <- as.numeric(as.character(DRC$avgprec))
git stash
